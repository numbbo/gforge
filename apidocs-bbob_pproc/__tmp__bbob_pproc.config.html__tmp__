<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
          "DTD/xhtml1-strict.dtd">
<html>
  <head>
    <title>bbob_pproc.config : API documentation</title>

    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <link type="text/css" rel="stylesheet" href="bootstrap.min.css" />
    <link type="text/css" rel="stylesheet" href="apidocs.css" />
  </head>
  <body>

    <nav class="navbar navbar-default">
      <div class="container">
        <div class="navbar-header">
          <a class="navbar-brand" href="index.html">
            bbob_pproc API Documentation
          </a>
        </div>
      </div>
    </nav>

    <div id="showPrivate">
      <button class="btn btn-link" onclick="togglePrivate()">Toggle Private API</button>
    </div>

    <div class="container">

      <div class="page-header">
        <h1 class="module"><code>bbob_pproc.config</code> <small>module documentation</small></h1>

        <span id="partOf">
          Part of <code><a href="bbob_pproc.html" data-type="Package" class="code">bbob_pproc</a></code>
          
          
        </span>
      </div>

      <div class="extrasDocstring">
        
      </div>

      <div class="moduleDocstring">
        <pre>This module is an attempt for a global configuration file for various parameters.

The import of this module, :py:mod:`config`, changes default settings (attributes)
of other modules. This works, because each module has only one instance.

Before this module is imported somewhere, modules use their default settings.

This file could be dynamically modified and reloaded.

See also genericsettings.py which is a central place to define settings
used by other modules, but does not modify settings of other modules.</pre>
      </div>

      <div id="splitTables">
        <table class="children sortable" id="id24">
  
  <tr class="function">
    
    <td>Function</td>
    <td><a href="bbob_pproc.config.html#target_values" data-type="Function" class="code">target_values</a></td>
    <td><span>manage target values setting in "expensive" optimization scenario.</span></td>
  </tr><tr class="function">
    
    <td>Function</td>
    <td><a href="bbob_pproc.config.html#config" data-type="Function" class="code">config</a></td>
    <td><span>called from a high level, e.g. rungeneric, to configure the lower level modules via modifying parameter settings.</span></td>
  </tr><tr class="function">
    
    <td>Function</td>
    <td><a href="bbob_pproc.config.html#main" data-type="Function" class="code">main</a></td>
    <td><span class="undocumented">Undocumented</span></td>
  </tr>
</table>
        

          
      </div>

      <div id="childList">

        <div class="basefunction">
  
  <a name="bbob_pproc.config.target_values">
    
  </a>
  <a name="target_values">
    
  </a>
  <div class="functionHeader">
    
    def
    target_values(is_expensive, dict_max_fun_evals={}, runlength_limit=1000.0):
    
  </div>
  <div class="docstring functionBody">
    
    
    <div>manage target values setting in "expensive" optimization scenario.<table class="fieldTable"></table></div>
  </div>
</div><div class="basefunction">
  
  <a name="bbob_pproc.config.config">
    
  </a>
  <a name="config">
    
  </a>
  <div class="functionHeader">
    
    def
    config(testbed_name=None):
    
  </div>
  <div class="docstring functionBody">
    
    
    <div>called from a high level, e.g. rungeneric, to configure the lower level
modules via modifying parameter settings.<table class="fieldTable"></table></div>
  </div>
</div><div class="basefunction">
  
  <a name="bbob_pproc.config.main">
    
  </a>
  <a name="main">
    
  </a>
  <div class="functionHeader">
    
    def
    main():
    
  </div>
  <div class="docstring functionBody">
    
    
    <div class="undocumented">Undocumented</div>
  </div>
</div>

      </div>
      <address>
        <a href="index.html">API Documentation</a> for bbob_pproc, generated by <a href="https://github.com/twisted/pydoctor/">pydoctor</a> at 2016-09-24 16:25:03.
      </address>

    </div>

    <script type="text/javascript" src="pydoctor.js"></script>

  </body>
</html>